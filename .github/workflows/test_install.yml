name: Install and Test

on:
  pull_request:
    branches: [dev]
  workflow_dispatch:

jobs:
  uv-test:
    if: github.event_name != 'push' || contains(github.event.head_commit.message, 'ci')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - run: uv sync --all-extras
      - run: uv run -m pytest tests

  conda-test:
    if: github.event_name != 'push' || contains(github.event.head_commit.message, 'ci')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Miniforge3
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-variant: Miniforge3
          miniforge-version: latest
          python-version: ${{ matrix.python-version }}
          environment-name: masknmf
          activate-environment: masknmf
          channels: conda-forge

      - name: Install package & pytest
        shell: bash -l {0}
        run: |
          pip install . pytest

      - name: Run tests
        shell: bash -l {0}
        run: pytest tests
